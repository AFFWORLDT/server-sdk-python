# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .regex_option import RegexOption
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class RegexReplacement(UniversalBaseModel):
    regex: str = pydantic.Field()
    """
    This is the regex pattern to replace.
    """

    options: typing.Optional[typing.List[RegexOption]] = pydantic.Field(default=None)
    """
    These are the options for the regex replacement. Default all options are disabled.
    
    @default []
    """

    value: str = pydantic.Field()
    """
    This is the value that will replace the match.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
