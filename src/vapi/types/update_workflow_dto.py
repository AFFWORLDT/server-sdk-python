# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .create_workflow_dto import CreateWorkflowDto
import typing
from .update_workflow_dto_nodes_item import UpdateWorkflowDtoNodesItem
from .edge import Edge
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class UpdateWorkflowDto(UniversalBaseModel):
    nodes: typing.Optional[typing.List[UpdateWorkflowDtoNodesItem]] = None
    name: typing.Optional[str] = None
    edges: typing.Optional[typing.List[Edge]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(CreateWorkflowDto, UpdateWorkflowDto=UpdateWorkflowDto)
